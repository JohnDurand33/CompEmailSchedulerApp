"""empty message

Revision ID: 240ed09a9afc
Revises: 
Create Date: 2024-08-08 11:14:50.020471

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '240ed09a9afc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('image', sa.String(length=200), nullable=True),
    sa.Column('template', sa.Text(), nullable=True),
    sa.Column('recipients', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('schedule_time', sa.DateTime(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('recipients', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('compliment')
    with op.batch_alter_table('recipient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=120), nullable=False))
        batch_op.add_column(sa.Column('relationship', sa.String(length=120), nullable=False))
        batch_op.add_column(sa.Column('address', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('avatar', sa.String(length=200), nullable=True))
        batch_op.drop_column('timezone')
        batch_op.drop_column('days_of_week')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint('user_username_key', type_='unique')
        batch_op.drop_column('username')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False))
        batch_op.create_unique_constraint('user_username_key', ['username'])

    with op.batch_alter_table('recipient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('days_of_week', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('timezone', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.drop_column('avatar')
        batch_op.drop_column('address')
        batch_op.drop_column('relationship')
        batch_op.drop_column('name')

    op.create_table('compliment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('recipient_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('compliment_text', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('sent_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['recipient.id'], name='compliment_recipient_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='compliment_pkey')
    )
    op.drop_table('message')
    op.drop_table('event')
    # ### end Alembic commands ###
